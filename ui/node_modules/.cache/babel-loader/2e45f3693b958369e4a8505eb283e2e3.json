{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Downloads/development-challenge-master 2/ui/src/components/table.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport { TablePagination, FormControlLabel, Switch } from '@material-ui/core';\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700\n  }\n});\nexport default function CustomizedTables({\n  data\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [dataToShow, setDataToShow] = React.useState(data);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  console.log(data, 'this is the data');\n  const headers = data.reduce((output, entry) => {\n    const result = output;\n    Object.keys(entry).map(key => {\n      if (!result.includes(key)) result.push(key);\n    });\n    return result;\n  }, []);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n\n    if (event.target.checked) {\n      let newArray = dataToShow.filter(x => x.paymentMethod === undefined);\n      setDataToShow(newArray);\n      return;\n    }\n\n    setDataToShow(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: dense,\n        onChange: handleChangeDense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 18\n      }, this),\n      label: \"Without Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"customized table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: headers.map(key => {\n              return /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: // Convert camelcased values to uppercased values to be used as\n                // dynamic headers\n                key.replace(/([A-Z])/g, \" $1\").replace(/^./, function (str) {\n                  return str.toUpperCase();\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: dataToShow.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n            children: headers.map(key => {\n              return /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: row[key]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 30\n              }, this);\n            })\n          }, row.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 20, 30],\n        component: \"div\",\n        count: data.length,\n        onChangePage: handleChangePage,\n        onChangeRowsPerPage: handleChangeRowsPerPage,\n        rowsPerPage: rowsPerPage,\n        page: page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CustomizedTables, \"LAZpfjMOcpJLGue6t7BRm/8Fql0=\", false, function () {\n  return [useStyles];\n});\n\n_c = CustomizedTables;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomizedTables\");","map":{"version":3,"sources":["/Users/macbookpro/Downloads/development-challenge-master 2/ui/src/components/table.jsx"],"names":["React","withStyles","makeStyles","Table","TablePagination","FormControlLabel","Switch","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","action","hover","useStyles","table","minWidth","CustomizedTables","data","classes","page","setPage","useState","dataToShow","setDataToShow","dense","setDense","rowsPerPage","setRowsPerPage","console","log","headers","reduce","output","entry","result","Object","keys","map","key","includes","push","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","handleChangeDense","checked","newArray","filter","x","paymentMethod","undefined","replace","str","toUpperCase","slice","row","name","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport { TablePagination, FormControlLabel, Switch } from '@material-ui/core';\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function CustomizedTables({ data }) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [dataToShow, setDataToShow] = React.useState(data)\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  console.log(data, 'this is the data')\n  const headers = data.reduce((output, entry) => {\n    const result = output;\n    Object.keys(entry).map((key) => {\n      if (!result.includes(key)) result.push(key);\n    });\n    return result;\n  }, []);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n\n    if (event.target.checked) {\n      let newArray = dataToShow.filter(x => x.paymentMethod === undefined)\n      setDataToShow(newArray)\n      return\n    }\n    setDataToShow(data)\n  };\n  return (\n    <>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Without Payment\"\n      />\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              {headers.map((key) => {\n                return (\n                  <StyledTableCell>\n                    {\n                      // Convert camelcased values to uppercased values to be used as\n                      // dynamic headers\n                      key\n                        .replace(/([A-Z])/g, \" $1\")\n                        .replace(/^./, function (str) {\n                          return str.toUpperCase();\n                        })\n                    }\n                  </StyledTableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              dataToShow\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => (\n                  <StyledTableRow key={row.name}>\n                    {headers.map((key) => {\n                      return <StyledTableCell>{row[key]}</StyledTableCell>;\n                    })}\n                  </StyledTableRow>\n                ))}\n          </TableBody>\n        </Table>\n        <TablePagination\n          rowsPerPageOptions={[10, 20, 30]}\n          component=\"div\"\n          count={data.length}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n          rowsPerPage={rowsPerPage}\n          page={page}\n        />\n\n      </TableContainer>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}